x - complete
o - in progress
* - do next

User Input:
[] add more interactions to start - choose which mode to use (play/visualize/debug) choose which game to play

Output:
[] make sure all print/output are handled by one class/package to be more flexible/easy to change

Not fully applied/ used:
[] responses
    keep adding new types as needed
    apply to more rooms
[] action requirements
    keep adding new types as needed
    apply to more characters/items
    Rooms have requirements for actions in them (light for vision)
        lantern rooms can't see when lamp is not on -> any exit is random: see rooms at __NeedLantern (rooms)
[] states
    container state -> use or lose
    liquid state

New:
[] actions cause other actions on an item
    burning -> break
    throw -> drop
[] achievements 
    should have action/(state?target?tool?result?) requirements/activations
[] SkillSet
    could also track other state information
    repetition of achievements
    decide whether other characters are friends/enemies (count friendly actions)
    track which rooms have been visited/ how many times (useful for displaying/not displaying text)
    track character health/energy
    temporary room information (if required to make shot each time to leave)
[] Feedback
    store data in a format that can be passed to either the commandline or CPU controlled character
    add Feedback about what other Characters in the room experience (or in adjacent rooms hear)

Low Priority:
[] allow for different starting states in state graphs
[] character control
    return a tuple of an Action and inputs so CPU controlled Characters can make decisions more easily.
    create a more complex NPCController
    convert string into and Action and inputs and return Action, inputs
[*] implement all actions
    see more at __ItemDetails (items)
    [] actions could have default responses for success/failure (take: Taken./No items were taken., drop: Dropped./No items were dropped.)
    [] actions have default boolean (if true they get only get the default action implementation but without the warning that it is not implemented)
[] special text/ features
    see more at __SpecialDeets (rooms)
[] multiplayer
[] character selection/creation?
[] detail wearing for characters
[] different levels of description like brief/vague, normal, descriptive/detailed 

Formatting/style:
[] inputs for actions should use **kwargs format

Other:
[] bugs
    make origin work/ fill in correctly
[] testing
[] comments
[] visualization
[] how will this be shared

Needs input:
[] ideas/questions
    contents of wallet at the end are determined by actions during the game
    do theatre passages need instruments to be unbroken
[] improve disambiguation/ change it to be more zork style?
